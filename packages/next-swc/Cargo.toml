[workspace]

members = [
  "crates/core",
  "crates/napi",
  "crates/wasm",
  "crates/next-binding",
  "crates/next-build",
  "crates/next-core",
  "crates/next-dev",
  "crates/next-dev-tests",
  "crates/next-transform-font",
  "crates/next-transform-dynamic",
  "crates/next-transform-strip-page-exports",
]

[profile.dev.package.swc_css_prefixer]
opt-level = 2

# This is a workaround for wasm timeout issue
[profile.dev.package."*"]
debug-assertions = false

[profile.release]
lto = true

[workspace.dependencies]
# Workspace crates
next-binding = { path = "crates/next-binding" }
next-build = { path = "crates/next-build" }
next-core = { path = "crates/next-core", default-features = false  }
next-dev = { path = "crates/next-dev" }
next-dev-tests = { path = "crates/next-dev-tests" }
next-transform-font = { path = "crates/next-transform-font" }
next-transform-dynamic = { path = "crates/next-transform-dynamic" }
next-transform-strip-page-exports = { path = "crates/next-transform-strip-page-exports" }

# SWC crates
# Keep consistent with preset_env_base through swc_core
browserslist-rs = { version = "0.12.2" }
mdxjs = { version = "0.1.8" }
modularize_imports = { version = "0.26.10" }
styled_components = { version = "0.53.10" }
styled_jsx = { version = "0.30.10" }
swc_core = { version = "0.69.6" }
swc_emotion = { version = "0.29.10" }
testing = { version = "0.31.31" }

# Turbo crates
auto-hash-map = { path = "../../../turbo-crates/crates/auto-hash-map" }
node-file-trace = { path = "../../../turbo-crates/crates/node-file-trace" }
swc-ast-explorer = { path = "../../../turbo-crates/crates/swc-ast-explorer" }
turbo-malloc = { default-features = false, path = "../../../turbo-crates/crates/turbo-malloc" }
turbo-tasks = { path = "../../../turbo-crates/crates/turbo-tasks" }
turbo-tasks-build = { path = "../../../turbo-crates/crates/turbo-tasks-build" }
turbo-tasks-env = { path = "../../../turbo-crates/crates/turbo-tasks-env" }
turbo-tasks-fetch = { path = "../../../turbo-crates/crates/turbo-tasks-fetch" }
turbo-tasks-fs = { path = "../../../turbo-crates/crates/turbo-tasks-fs" }
turbo-tasks-hash = { path = "../../../turbo-crates/crates/turbo-tasks-hash" }
turbo-tasks-macros = { path = "../../../turbo-crates/crates/turbo-tasks-macros" }
turbo-tasks-macros-shared = { path = "../../../turbo-crates/crates/turbo-tasks-macros-shared" }
turbo-tasks-memory = { path = "../../../turbo-crates/crates/turbo-tasks-memory" }
turbo-tasks-testing = { path = "../../../turbo-crates/crates/turbo-tasks-testing" }
turbo-updater = { path = "../../../turbo-crates/crates/turbo-updater" }
turbopack = { path = "../../../turbo-crates/crates/turbopack" }
turbopack-build = { path = "../../../turbo-crates/crates/turbopack-build" }
turbopack-cli-utils = { path = "../../../turbo-crates/crates/turbopack-cli-utils" }
turbopack-core = { path = "../../../turbo-crates/crates/turbopack-core" }
turbopack-create-test-app = { path = "../../../turbo-crates/crates/turbopack-create-test-app" }
turbopack-css = { path = "../../../turbo-crates/crates/turbopack-css" }
turbopack-dev = { path = "../../../turbo-crates/crates/turbopack-dev" }
turbopack-dev-server = { path = "../../../turbo-crates/crates/turbopack-dev-server" }
turbopack-ecmascript = { path = "../../../turbo-crates/crates/turbopack-ecmascript" }
turbopack-env = { path = "../../../turbo-crates/crates/turbopack-env" }
turbopack-json = { path = "../../../turbo-crates/crates/turbopack-json" }
turbopack-mdx = { path = "../../../turbo-crates/crates/turbopack-mdx" }
turbopack-node = { path = "../../../turbo-crates/crates/turbopack-node" }
turbopack-static = { path = "../../../turbo-crates/crates/turbopack-static" }
turbopack-swc-utils = { path = "../../../turbo-crates/crates/turbopack-swc-utils" }
turbopack-test-utils = { path = "../../../turbo-crates/crates/turbopack-test-utils" }
turbopack-tests = { path = "../../../turbo-crates/crates/turbopack-tests" }

# General Deps

# Be careful when selecting tls backend, including change default tls backend.
# If you changed, must verify with ALL build targets with next-swc to ensure
# it works. next-swc have various platforms, some doesn't support native (using openssl-sys)
# and some aren't buildable with rustls.
reqwest = { version = "0.11.14", default-features = false }

chromiumoxide = { version = "0.4.0", features = [
  "tokio-runtime",
], default-features = false }
# For matching on errors from chromiumoxide. Keep in
# sync with chromiumoxide's tungstenite requirement.
tungstenite = "0.17.3"

anyhow = "1.0.69"
assert_cmd = "2.0.8"
async-compression = { version = "0.3.13", default-features = false, features = [
  "gzip",
  "tokio",
] }
async-trait = "0.1.64"
atty = "0.2.14"
chrono = "0.4.23"
clap = "4.1.6"
clap_complete = "4.1.2"
concurrent-queue = "2.1.0"
console = "0.15.5"
console-subscriber = "0.1.8"
criterion = "0.4.0"
dashmap = "5.4.0"
dialoguer = "0.10.3"
dunce = "1.0.3"
futures = "0.3.26"
futures-retry = "0.6.0"
httpmock = { version = "0.6.7", default-features = false }
indexmap = "1.9.2"
indicatif = "0.17.3"
indoc = "2.0.0"
itertools = "0.10.5"
lazy_static = "1.4.0"
log = "0.4.17"
mime = "0.3.16"
nohash-hasher = "0.2.0"
once_cell = "1.17.1"
owo-colors = "3.5.0"
parking_lot = "0.12.1"
pathdiff = "0.2.1"
pin-project-lite = "0.2.9"
predicates = "2.1.5"
pretty_assertions = "1.3.0"
proc-macro2 = "1.0.51"
qstring = "0.7.2"
quote = "1.0.23"
rand = "0.8.5"
regex = "1.7.0"
rstest = "0.16.0"
rustc-hash = "1.1.0"
semver = "1.0.16"
serde = { version = "1.0.152", features = ["derive"] }
serde_json = "1.0.93"
serde_qs = "0.11.0"
serde_yaml = "0.9.17"
syn = "1.0.107"
tempfile = "3.3.0"
thiserror = "1.0.38"
tiny-gradient = "0.1.0"
tokio = "1.25.0"
tokio-util = { version = "0.7.7", features = ["io"] }
tracing = "0.1.37"
url = "2.2.2"
urlencoding = "2.1.2"
webbrowser = "0.8.7"
